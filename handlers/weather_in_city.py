from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton
import requests
from loader import bot
from config_data import config
import datetime
from database import save_request, get_user_history, init_db

user_city_data = {}

init_db()


@bot.message_handler(content_types=['text'])
def get_weather(message: Message) -> None:
    if message.text.startswith("/"):
        return

    try:
        city = message.text.strip()
        res = requests.get(
            f'http://api.openweathermap.org/data/2.5/weather?q={city}&appid={config.RAPID_API_KEY}&units=metric'
        )
        data = res.json()

        city_name = data['name']
        temperature = data['main']['temp']
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind = data['wind']['speed']
        sunrise_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        length_of_the_day = sunset_timestamp - sunrise_timestamp

        bot.reply_to(message, f"***{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}***\n"
                              f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city_name}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}C¬∞\n"
                              f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
                              f"–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp}\n–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}\n"
                              f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_the_day}\n"
                              f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_city_data[message.chat.id] = city
        save_request(message.chat.id, city_name, temperature)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–î–∞" –∏ "–ù–µ—Ç"
        markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn_yes = KeyboardButton("–î–∞")
        btn_no = KeyboardButton("–ù–µ—Ç")
        markup.add(btn_yes, btn_no)

        bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∫–ª–∏–º–∞—Ç –≤ —ç—Ç–æ–º –≥–æ—Ä–æ–¥–µ?", reply_markup=markup)

        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.register_next_step_handler(message, get_climate)

    except Exception:
        bot.reply_to(message, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")


def get_climate(message: Message) -> None:
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª '–î–∞'."""
    city = user_city_data.get(message.chat.id, None)

    if not city:
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return

    if message.text.strip().lower() == "–¥–∞":
        try:
            last_year = "2023-01-01"
            api_url = f"https://api.weatherapi.com/v1/history.json?key={config.Climate_API}&q={city}&dt={last_year}&lang=ru"
            response = requests.get(api_url)
            data = response.json()
            print(data)

            if "error" in data:
                bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                return

            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
            climate_info = data['forecast']['forecastday'][0]['day']
            avg_temp = climate_info['avgtemp_c']
            min_temp = climate_info['mintemp_c']
            max_temp = climate_info['maxtemp_c']
            avg_humidity = climate_info['avghumidity']

            bot.reply_to(message, f"üåé –ö–ª–∏–º–∞—Ç –≤ **{city}** (1 —è–Ω–≤–∞—Ä—è 2023):\n"
                                  f"üìå –°—Ä–µ–¥–Ω—è—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {avg_temp}¬∞C\n"
                                  f"üå° –ú–∏–Ω. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {min_temp}¬∞C\n"
                                  f"üî• –ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {max_temp}¬∞C\n"
                                  f"üíß –°—Ä–µ–¥–Ω—è—è –≤–ª–∞–∂–Ω–æ—Å—Ç—å: {avg_humidity}%\n"
                                  f"üìä –î–∞–Ω–Ω—ã–µ –∑–∞ –ø—Ä–æ—à–ª—ã–π –≥–æ–¥, —á—Ç–æ–±—ã –¥–∞—Ç—å –æ–±—â–µ–µ –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –æ –∫–ª–∏–º–∞—Ç–µ üåç")

        except Exception as e:
            bot.reply_to(message, "–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
    else:
        bot.reply_to(message, "–•–æ—Ä–æ—à–æ! –ï—Å–ª–∏ —á—Ç–æ, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å üòä")
