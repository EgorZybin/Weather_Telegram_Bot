from telebot.types import Message, ReplyKeyboardMarkup, KeyboardButton, ReplyKeyboardRemove
import requests
from loader import bot
from config_data import config
import datetime
from database import save_request, get_user_history, init_db

user_city_data = {}

init_db()


@bot.message_handler(content_types=['text'])
def get_weather(message: Message) -> None:
    if message.text.startswith("/"):
        return

    try:
        city = message.text.strip()
        res = requests.get(
            f'http://api.openweathermap.org/data/2.5/weather?q={city}&appid={config.RAPID_API_KEY}&units=metric'
        )
        data = res.json()
        print(data)

        city_name = data['name']
        temperature = data['main']['temp']
        humidity = data['main']['humidity']
        pressure = data['main']['pressure']
        wind = data['wind']['speed']
        sunrise_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunrise'])
        sunset_timestamp = datetime.datetime.fromtimestamp(data['sys']['sunset'])
        length_of_the_day = sunset_timestamp - sunrise_timestamp

        bot.reply_to(message, f"***{datetime.datetime.now().strftime('%Y-%m-%d %H:%M')}***\n"
                              f"–ü–æ–≥–æ–¥–∞ –≤ –≥–æ—Ä–æ–¥–µ: {city_name}\n–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞: {temperature}C¬∞\n"
                              f"–í–ª–∞–∂–Ω–æ—Å—Ç—å: {humidity}%\n–î–∞–≤–ª–µ–Ω–∏–µ: {pressure} –º–º.—Ä—Ç.—Å—Ç\n–í–µ—Ç–µ—Ä: {wind} –º/—Å\n"
                              f"–í–æ—Å—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞: {sunrise_timestamp}\n–ó–∞–∫–∞—Ç —Å–æ–ª–Ω—Ü–∞: {sunset_timestamp}\n"
                              f"–ü—Ä–æ–¥–æ–ª–∂–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å –¥–Ω—è: {length_of_the_day}\n"
                              f"–•–æ—Ä–æ—à–µ–≥–æ –¥–Ω—è!")

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –≥–æ—Ä–æ–¥ –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        user_city_data[message.chat.id] = city
        save_request(message.chat.id, city_name, temperature)

        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≤–æ–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Å –∫–Ω–æ–ø–∫–∞–º–∏ "–î–∞" –∏ "–ù–µ—Ç"
        markup = ReplyKeyboardMarkup(resize_keyboard=True, one_time_keyboard=True)
        btn_yes = KeyboardButton("–î–∞")
        btn_no = KeyboardButton("–ù–µ—Ç")
        markup.add(btn_yes, btn_no)

        bot.send_message(message.chat.id, "–•–æ—Ç–∏—Ç–µ —É–∑–Ω–∞—Ç—å –∫–ª–∏–º–∞—Ç –≤ —ç—Ç–æ–º –≥–æ—Ä–æ–¥–µ?", reply_markup=markup)

        # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º –æ–±—Ä–∞–±–æ—Ç—á–∏–∫ –Ω–∞ –æ–∂–∏–¥–∞–Ω–∏–µ –æ—Ç–≤–µ—Ç–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
        bot.register_next_step_handler(message, get_climate)

    except Exception:
        bot.reply_to(message, "–ü—Ä–æ–≤–µ—Ä—å—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ –≥–æ—Ä–æ–¥–∞.")


def get_climate(message: Message) -> None:
    """–ü–æ–ª—É—á–∞–µ—Ç –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ, –µ—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –æ—Ç–≤–µ—Ç–∏–ª '–î–∞'."""

    city = user_city_data.get(message.chat.id, None)

    if not city:
        bot.reply_to(message, "–ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —Å–Ω–æ–≤–∞.")
        return

    # 1. –ü–æ–ª—É—á–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–æ—Ä–æ–¥–∞ —á–µ—Ä–µ–∑ OpenWeatherMap
    res = requests.get(
        f'http://api.openweathermap.org/data/2.5/weather?q={city}&appid={config.RAPID_API_KEY}&units=metric'
    )
    data = res.json()

    if res.status_code != 200 or "coord" not in data:
        bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –≥–æ—Ä–æ–¥–∞. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
        return

    # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã
    lon = data['coord']['lon']
    lat = data['coord']['lat']

    # 2. –ï—Å–ª–∏ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å –ø–æ–¥—Ç–≤–µ—Ä–¥–∏–ª –∑–∞–ø—Ä–æ—Å, –ø–æ–ª—É—á–∞–µ–º –∫–ª–∏–º–∞—Ç –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
    if message.text.strip().lower() == "–¥–∞":
        try:
            # –ó–∞–ø—Ä–æ—Å –∫ Open-Meteo API –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö –ø–æ –∫–æ–æ—Ä–¥–∏–Ω–∞—Ç–∞–º
            climate_url = f"https://api.open-meteo.com/v1/forecast?latitude={lat}&longitude={lon}&daily=temperature_2m_max,temperature_2m_min,precipitation_sum"
            climate_response = requests.get(climate_url)
            climate_data = climate_response.json()

            if "error" in climate_data:
                bot.reply_to(message, "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ.")
                return

            # –ò–∑–≤–ª–µ–∫–∞–µ–º –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ –¥–∞–Ω–Ω—ã–µ
            max_temp = climate_data['daily']['temperature_2m_max'][0]
            min_temp = climate_data['daily']['temperature_2m_min'][0]
            precipitation = climate_data['daily']['precipitation_sum'][0]

            # –§–æ—Ä–º–∞—Ç–∏—Ä—É–µ–º –æ—Ç–≤–µ—Ç –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
            response_message = (
                f"üåç **–ö–ª–∏–º–∞—Ç –≤ –≥–æ—Ä–æ–¥–µ {city}**:\n\n"
                f"üìÖ **–ü—Ä–æ–≥–Ω–æ–∑ –Ω–∞ –±–ª–∏–∂–∞–π—à–∏–µ —Å—É—Ç–∫–∏**:\n\n"
                f"üå° **–ú–∞–∫—Å. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞**: {max_temp}¬∞C\n"
                f"‚ùÑÔ∏è **–ú–∏–Ω. —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞**: {min_temp}¬∞C\n"
                f"üíß **–û—Å–∞–¥–∫–∏**: {precipitation} –º–º\n\n"
                f"üìä –≠—Ç–∏ –¥–∞–Ω–Ω—ã–µ –º–æ–≥—É—Ç –ø–æ–º–æ—á—å –ø–æ–Ω—è—Ç—å –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏–µ —É—Å–ª–æ–≤–∏—è –≥–æ—Ä–æ–¥–∞ –¥–ª—è –ø–ª–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏—è –ø–æ–µ–∑–¥–∫–∏.\n\n"
                f"–ï—Å–ª–∏ –≤–∞–º –Ω—É–∂–Ω–æ –±–æ–ª—å—à–µ –¥–∞–Ω–Ω—ã—Ö –∏–ª–∏ –¥—Ä—É–≥–æ–π –ø—Ä–æ–≥–Ω–æ–∑, –ø—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏—Ç–µ! üòä"
            )

            bot.reply_to(message, response_message)

        except Exception as e:
            bot.reply_to(message, f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∫–ª–∏–º–∞—Ç–∏—á–µ—Å–∫–∏—Ö –¥–∞–Ω–Ω—ã—Ö. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ. –û—à–∏–±–∫–∞: {str(e)}")
    else:
        bot.reply_to(message, "–•–æ—Ä–æ—à–æ! –ï—Å–ª–∏ —á—Ç–æ, –æ–±—Ä–∞—â–∞–π—Ç–µ—Å—å üòä")